#!/bin/bash -e

push_and_deploy() {
  push_to_s3
  deploy_to_ec2

  return 0
}

deploy_to_ec2() {
  ensure_params_for_deploy_to_ec2

  local args=()

  if [[ -z "$CI_AWS_EC2_DEPLOYMENT_FILE" ]]; then
    args+=("--application-name" "${CI_AWS_EC2_APPLICATION_NAME}")
  else
    args+=("--cli-input-json" "file://${CI_AWS_EC2_DEPLOYMENT_FILE}")
  fi

  aws deploy create-deployment "${args[@]}"

  return 0
}

push_to_s3() {
  ensure_params_for_push_to_s3

  local args=()

  args+=("--application-name" "${CI_AWS_EC2_APPLICATION_NAME}" "--s3-location" "${CI_AWS_S3_TARGET_LOCATION}")
  cd "${CI_PROJECT_DIR}/${CI_AWS_S3_SOURCE_LOCATION}"

  aws deploy push "${args[@]}" &> /dev/null

  return 0
}

ensure_params_for_push_to_s3() {
  # There should be an artifact instead!!

  if [ -z "$CI_AWS_S3_SOURCE_LOCATION" ]; then
    echo "Please set up a CI_AWS_S3_SOURCE_LOCATION to define which folder of your project to upload to your AWS S3 bucket."
    exit 1
  fi
}

ensure_params_for_deploy_to_ec2() {
  if [ -z "$CI_AWS_EC2_DEPLOYMENT_FILE" ] && [ -z "$CI_AWS_EC2_APPLICATION_NAME" ]; then
    echo "Please set up a CI_AWS_EC2_DEPLOYMENT_FILE variable to input a JSON object to create your deployment to EC2."
    echo "Documentation: https://docs.gitlab.com/ee/ci/cloud_deployment"
    echo ""
    echo "Alternatively, you can set up a CI_AWS_EC2_APPLICATION_NAME variable to define your AWS CodeDeploy application."
    exit 1
  fi
}

option=$1
case $option in
  push-and-deploy) push_and_deploy ;;
  push-to-s3) push_to_s3 ;;
  deploy-to-ec2) deploy_to_ec2 ;;
  *) exit 1 ;;
esac
